// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id      String   @id @default(cuid())
  token   String   @unique
  user_id String
  expires DateTime
  user    User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Country {
  id      Int       @id @default(autoincrement())
  name    String
  Company Company[]

  @@map("countries")
}

model Company {
  id                 String   @id @default(uuid())
  name               String   @db.VarChar(150)
  address            String
  city               String
  state              String
  zipcode            String
  conutry            Country  @relation(fields: [country_id], references: [id])
  country_id         Int
  industry           String?
  numberOfEmployees  Int?
  contactPersonName  String?
  contactPersonEmail String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  User               User[]

  @@map("companies")
}

model User {
  id         String    @id @default(uuid())
  name       String    @db.VarChar(50)
  email      String    @unique
  company    Company   @relation(fields: [company_id], references: [id])
  accounts   Account[]
  sessions   Session[]
  company_id String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
